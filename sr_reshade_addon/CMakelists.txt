cmake_minimum_required(VERSION 3.23)
project (srReshadeAddon VERSION 0.1)

add_library(srReshadeAddon SHARED
    src/dllmain.cpp
    src/framework.h
    src/pch.h
    src/pch.cpp
    src/directx11weaver.h
    src/directx11weaver.cpp
    src/directx12weaver.h
    src/directx12weaver.cpp
    src/igraphicsapi.h
    src/igraphicsapi.cpp
    src/hotkey.cpp
    src/hotkey.h
    src/hotkeymanager.cpp
    src/hotkeymanager.h
)

find_package(simulatedreality REQUIRED)
find_package(srDirectX REQUIRED)

set(TARGET_IMGUI imgui)
add_subdirectory(third-party/imgui)
target_link_libraries(srReshadeAddon LINK_PUBLIC ${TARGET_IMGUI})

set(TARGET_RESHADE reshade)
add_subdirectory(third-party/reshade)
target_link_libraries(srReshadeAddon LINK_PUBLIC ${TARGET_RESHADE})

# message(${CMAKE_CURRENT_LIST_DIR}/third-party/DirecX-Headers/include/DirecX-Headers/cmake)
# find_package(DirectX-Headers REQUIRED ${CMAKE_CURRENT_LIST_DIR}/third-party/DirecX-Headers/include/DirecX-Headers)
set(TARGET_DXHEADERS DirectX-Headers)
add_subdirectory(third-party/DirectX-Headers)
target_link_libraries(srReshadeAddon LINK_PUBLIC ${TARGET_DXHEADERS})

#option(<COPY_DLL_TO_RESHADE_DIR> "Should the dll be copied automatically to the game directory set with RESHADE_DIR"> OFF)

# Rename dll with extension .addon
add_custom_command(TARGET srReshadeAddon POST_BUILD COMMAND ${CMAKE_COMMAND} ARGS -E copy $<TARGET_FILE:srReshadeAddon> $<TARGET_FILE_DIR:srReshadeAddon>/${PROJECT_NAME}.addon
)

# Copy dll to reshade directory
# if(${COPY_DLL_TO_RESHADE_DIR} AND NOT ${RESHADE_DIR} STREQUAL "")

# endif()

target_link_libraries(srReshadeAddon PRIVATE
    simulatedreality
    srDirectX::srDirectX
)